BUILD_NUMBER=$(shell cat BUILD.num)

BUILD_DIR ?= ./build

TARGET_DIR = ./app
COMPONENTS_DIR = ./component
SOURCES_DIR = .

VPATH = react:app:component

UNIQ = $(if $1,$(firstword $1) $(call uniq,$(filter-out $(firstword $1),$1)))

SOURCES := $(shell find $(SOURCES_DIR) \( -name "*.c" -or -name "*.s" \) -and -not -path "./third_party/*")
OBJECTS ?= $(SOURCES:%.c=%.o)
DEPENDENCIES := $(OBJECTS:.o=.d)

INCLUDE_DIRS := $(call UNIQ,$(dir $(OBJECTS)))
INCLUDE_FLAGS := $(addprefix -I, $(INCLUDE_DIRS)) -I/usr/avr/include

TARGET_SOURCES = $(wildcard $(TARGET_DIR)/*.c $(TARGET_DIR)/**/*.c)
TARGET_OBJECTS = $(patsubst %.c, %.o, \
			   $(TARGET_SOURCES))
TARGET ?= $(patsubst %.c, %, \
		 	$(TARGET_SOURCES))
PRODUCT_NAME ?= unnamed

COMPONENTS_SOURCES = $(shell find $(COMPONENTS_DIR) -name "*.c" -or -name "*.s")
COMPONENTS = $(patsubst %.c, %.o, \
			 	$(COMPONENTS_SOURCES))

DEFINE_COMPUTED ?=
DEFINE_FLAGS = -DBUILD_NUM=$(BUILD_NUMBER) -DARCH_$(ARCH)=1 -DPRODUCT_NAME=$(PRODUCT_NAME) -DTIMESTAMP=$(shell date +%s) $(DEFINE_COMPUTED)
CFLAGS ?= -Wall -g -Og $(OPTIMIZATION_FLAGS) $(DEBUG_FLAGS) $(DEFINE_FLAGS) $(MACHINE_FLAGS) --std=gnu11
COMPILE = $(CC) $(CFLAGS)

